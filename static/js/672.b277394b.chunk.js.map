{"version":3,"file":"static/js/672.b277394b.chunk.js","mappings":"0KACA,EAAiC,gCAAjC,EAA2E,yBAA3E,EAA8G,yBAA9G,EAAgJ,wBAAhJ,EAA+K,sBAA/K,EAAiN,2BAAjN,EAAuP,0BAAvP,EAA2R,yBAA3R,EAAqU,gCAArU,EAA6W,uBAA7W,EAAoZ,+BAApZ,EAA4b,wB,mBCY5b,EATmB,SAACA,GACnB,IAAIC,EAAO,YAAaD,EAAME,GAC9B,OACC,gBAAKC,UAAWC,EAAhB,UACG,SAAC,KAAD,CAASC,GAAMJ,EAAME,UAAa,SAAAG,GAAO,OAAIA,EAAQC,SAAWH,EAAgBA,GAAhF,SAAiGJ,EAAMQ,UCC5G,EANgB,SAACR,GAChB,OACC,gBAAKG,UAAWC,EAAhB,SAAiCJ,EAAMS,WCkCzC,EAlCgB,SAACT,GAEhB,IAAIU,EAAiBV,EAAMW,YAAYC,QAAQC,KAAK,SAAAL,GAAI,OAAI,SAAC,EAAD,CAAYA,KAAQA,EAAKA,KAAMN,GAAMM,EAAKN,QAElGY,EAAkBd,EAAMW,YAAYI,SAASF,KAAK,SAAAJ,GAAO,OAAI,SAAC,EAAD,CAASA,QAAWA,EAAQA,aAS7F,OACC,iBAAKN,UAAWC,EAAhB,WACC,gBAAKD,UAAWC,EAAhB,SACEM,KAEF,iBAAKP,UAAWC,EAAhB,WACC,gBAAKD,UAAaC,EAAlB,mBACEU,GACF,iBAAKX,UAAaC,EAAlB,WACC,qBAAUD,UAAaC,EACtBY,SAfiB,SAACC,GACtB,IAAIC,EAAOD,EAAEE,OAAOC,MACpBpB,EAAMqB,qBAAqBH,IAcvBE,MAAOpB,EAAMW,YAAYW,oBAC1B,gBAAKnB,UAAaC,EAAlB,UACC,mBAAQD,UAAaC,EAAemB,QApBxB,kBAAMvB,EAAMwB,eAoBxB,qC,UCFN,G,SAAeC,E,QAAAA,KACdC,EAAAA,EAAAA,KArBqB,SAACC,GAEtB,MAAO,CACNhB,YAAagB,EAAMhB,YACnBiB,OAAQD,EAAME,KAAKD,WAII,SAACE,GACzB,MAAO,CACNT,qBAAsB,SAACH,GACtBY,GAAUC,EAAAA,EAAAA,IAA+Bb,KAE1CM,YAAa,WACZM,GAASE,EAAAA,EAAAA,YAMZ,CAGGC,K","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__pjGR8\",\"dialogs\":\"Dialogs_dialogs__yfmEa\",\"passive\":\"Dialogs_passive__kDx4p\",\"active\":\"Dialogs_active__265Hz\",\"name\":\"Dialogs_name__FNu1B\",\"titleName\":\"Dialogs_titleName__O45AH\",\"messages\":\"Dialogs_messages__0Z1kG\",\"message\":\"Dialogs_message__5tr7e\",\"inputAddWraper\":\"Dialogs_inputAddWraper__UCYzx\",\"input\":\"Dialogs_input__8FmIr\",\"buttonWrapper\":\"Dialogs_buttonWrapper__uXaXH\",\"button\":\"Dialogs_button__uEcUj\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport clases from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\"+ props.id;\r\n\treturn ( \r\n\t\t<div className={clases.name}>\r\n\t\t\t\t\t<NavLink to = {path} className = {navData => navData.isActive ? clases.active : clases.passive}>{props.name}</NavLink>\r\n\t\t\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport clases from './../Dialogs.module.css';\r\n\r\nconst Message = (props)=> {\r\n\treturn (\r\n\t\t<div className={clases.message}>{props.message}</div>\r\n\t)\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport clases from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet dialogElements = props.dialogsPage.dialogs.map( name => <DialogItem name = {name.name} id = {name.id} /> );\r\n\r\n\tlet messageElements = props.dialogsPage.messages.map( message => <Message message = {message.message} /> );\r\n\r\n\tlet addMessage = () => props.sendMessage();\t\r\n\t\t\t\t\r\n\tlet onMessageChange = (e) => {\r\n\t\tlet body = e.target.value;\r\n\t\tprops.updateNewMessageBody(body);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={clases.dialogsWrapper}>\r\n\t\t\t<div className={clases.dialogs}>\r\n\t\t\t\t{dialogElements}\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className={clases.messages}>\r\n\t\t\t\t<div className = {clases.titleName}>Title</div>\r\n\t\t\t\t{ messageElements }\r\n\t\t\t\t<div className = {clases.inputAddWraper} >\r\n\t\t\t\t\t<textarea className = {clases.input}\r\n\t\t\t\t\t\tonChange={ onMessageChange }\r\n\t\t\t\t\t\tvalue={props.dialogsPage.newDialogMessage} />\r\n\t\t\t\t\t<div className = {clases.buttonWrapper}>\r\n\t\t\t\t\t\t<button className = {clases.button} onClick={ addMessage }>Add message</button>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageActionCreator, newMessageElementActionCreator} from '../../redux/DialogsReducer'\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthNavigate } from '../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tupdateNewMessageBody: (body) => {\r\n\t\t\tdispatch (newMessageElementActionCreator(body))\r\n\t\t},\r\n\t\tsendMessage: () => {\r\n\t\t\tdispatch(addMessageActionCreator());\t\r\n\t\t},\r\n\t}\r\n};\r\n\r\n\r\nexport default compose (\r\n\tconnect (mapStateToProps, mapDispatchToProps),\r\n\t//withAuthNavigate\r\n) (Dialogs)\r\n\r\n\r\n\r\n\r\n"],"names":["props","path","id","className","clases","to","navData","isActive","name","message","dialogElements","dialogsPage","dialogs","map","messageElements","messages","onChange","e","body","target","value","updateNewMessageBody","newDialogMessage","onClick","sendMessage","compose","connect","state","isAuth","auth","dispatch","newMessageElementActionCreator","addMessageActionCreator","Dialogs"],"sourceRoot":""}